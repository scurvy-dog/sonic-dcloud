# ansible-playbook sonic_node_health_check.yml -e "ansible_user=cisco ansible_ssh_pass=cisco123 ansible_sudo_pass=cisco123" -vv

- name: Check each SONiC Routers Health
  gather_facts: false
  hosts: localhost

  tasks:
  # START LOGGING TO DEPLOY.LOG FILE
  - name: Output to deploy log file
    lineinfile:
      path: "/home/cisco/deploy.log"
      line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router Health Check Script"
      create: yes
      
  # CHECK SONiC ROUTER LEAF-1 STATUS
  - name: Ping test leaf-1
    shell: ping -c 1 -W 5 172.10.10.101
    register: ping_result1
    ignore_errors: true

  - name: Conditional check if ping to leaf-1 failed
    block:
      - name: Output to deploy log file
        lineinfile:
          path: "/home/cisco/deploy.log"
          line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router leaf-1: Failed. Queued for rebuild."
          create: yes

      - name: Print debug output
        debug:
          msg: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router leaf-1: Failed. Queued for rebuild."

      - name: Add vm-leaf-1 to host group sonic_node_rebuild
        add_host:
          name: '198.18.128.101'
          groups: sonic_node_rebuild

    when: (ping_result1.failed == true)

  - name: Conditional check if ping to leaf-1 success
    block:
      - name: Output to deploy log file
        lineinfile:
          path: "/home/cisco/deploy.log"
          line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router leaf-1: Health Check Passed"
          create: yes

      - name: print debug
        debug:
          msg: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router leaf-1: Health Check Passed"

    when: (ping_result1.failed == false)

  # CHECK SONiC ROUTER LEAF-2 STATUS
  - name: Ping test leaf-2
    shell: ping -c 1 -W 5 172.10.10.102
    register: ping_result2
    ignore_errors: true

  - name: Conditional check if ping to leaf-2 failed
    block:
      - name: Output to deploy log file
        lineinfile:
          path: "/home/cisco/deploy.log"
          line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router leaf-2: Failed. Queued for rebuild."
          create: yes

      - name: Print debug output
        debug:
          msg: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router leaf-2: Failed. Queued for rebuild."

      - name: Add vm-leaf-2 to host group sonic_node_rebuild
        add_host:
          name: '198.18.128.102'
          groups: sonic_node_rebuild
          
    when: (ping_result2.failed == true)

  - name: Conditional check if ping to leaf-1 success
    block:
      - name: Output to deploy log file
        lineinfile:
          path: "/home/cisco/deploy.log"
          line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router leaf-2: Health Check Passed."
          create: yes

      - name: print debug
        debug:
          msg: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router leaf-2: Health Check Passed."

    when: (ping_result2.failed == false)

  # CHECK SONiC ROUTER SPINE-1 STATUS
  - name: Ping test spine-1
    shell: ping -c 1 -W 5 172.10.10.103
    register: ping_result3
    ignore_errors: true

  - name: Conditional check if ping to spine-1 failed
    block:
      - name: Output to deploy log file
        lineinfile:
          path: "/home/cisco/deploy.log"
          line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router spine-1: Failed. Queued for rebuild."
          create: yes

      - name: Print debug output
        debug:
          msg: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router spine-1: Failed. Queued for rebuild."

      - name: Add vm-spine-1 to host group sonic_node_rebuild
        add_host:
          name: '198.18.128.103'
          groups: sonic_node_rebuild

    when: (ping_result3.failed == true)

  - name: Conditional check if ping to spine-1 success
    block:
      - name: Output to deploy log file
        lineinfile:
          path: "/home/cisco/deploy.log"
          line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router spine-1: Health Check Passed."
          create: yes

      - name: print debug
        debug:
          msg: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router spine-1: Health Check Passed."

    when: (ping_result3.failed == false)

  # CHECK SONiC ROUTER SPINE-2 STATUS
  - name: Ping test spine-2
    shell: ping -c 1 -W 5 172.10.10.104
    register: ping_result4
    ignore_errors: true

  - name: Conditional check if ping to spine-2 failed
    block:
      - name: Output to deploy log file
        lineinfile:
          path: "/home/cisco/deploy.log"
          line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router spine-2: Failed. Queued for rebuild."
          create: yes

      - name: Print debug output
        debug:
          msg: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router spine-2: Failed. Queued for rebuild."

      - name: Add vm-spine-2 to host group sonic_node_rebuild
        add_host:
          name: '198.18.128.104'
          groups: sonic_node_rebuild

    when: (ping_result4.failed == true)

  - name: Conditional check if ping to spine-2 success
    block:
      - name: Output to deploy log file
        lineinfile:
          path: "/home/cisco/deploy.log"
          line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router spine-2: Health Check Passed."
          create: yes

      - name: print debug
        debug:
          msg: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router spine-2: Health Check Passed."

    when: (ping_result4.failed == false)

# Run the rebuild tasks for each failed node

- name: Setup lab and deploy SONiC containerlab nodes
  hosts: sonic_node_rebuild
  become: true
  vars:
      sonic:
        198.18.128.101:
          vm_name: vm-leaf-1
          sonic_name: leaf-1
          container_name: clab-c8101-sonic-leaf-1
        198.18.128.102:
          vm_name: vm-leaf-2
          sonic_name: leaf-2
          container_name: clab-c8101-sonic-leaf-2
        198.18.128.103:
          vm_name: vm-spine-1
          sonic_name: spine-1
          container_name: clab-c8101-sonic-spine-1
        198.18.128.104:
          vm_name: vm-spine-2
          sonic_name: spine-2
          container_name: clab-c8101-sonic-spine-2
  tasks:
      
  # START REBUILD TASKS. SEND TO DEPLOY.LOG FILE

    - name: run containerlab destroy existing sonic container
      command: sudo containerlab destroy -t "{{ sonic[inventory_hostname]['vm_name'] }}/clab.yml"
      args:
        chdir: /home/cisco/sonic-dcloud/1-SONiC_101/ansible/files/
      ignore_errors: yes

    - name: Output to deploy log file
      lineinfile:
        path: "/home/cisco/deploy.log"
        line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router {{ {{ sonic[inventory_hostname]['sonic_name'] }} rebuild started. "
        create: yes
        
    - name: run containerlab deploy command to launch sonic vxr on remote host
      command: sudo containerlab deploy -t "{{ sonic[inventory_hostname]['vm_name'] }}/clab.yml"
      args:
        chdir: /home/cisco/sonic-dcloud/1-SONiC_101/ansible/files/
      ignore_errors: yes

    - name: run vxlan shell script to interconnect containerlab nodes across VMs
      command: "{{ sonic[inventory_hostname]['vm_name']  }}/vxlan.sh"
      args:
        chdir: /home/cisco/sonic-dcloud/1-SONiC_101/ansible/files/
      ignore_errors: yes

    - name: Pause for 5 minutes
      pause:
        minutes: 5

    - name: Wait for 'Router' to appear in logs
      shell: docker logs -t {{ sonic[inventory_hostname]['vm_name']['container_name'] }} | grep Router
      register: grep_result
      until: grep_result.stdout_lines | length > 0
      retries: 18  # Number of times to retry
      delay: 30  # Delay between retries
      timeout: 600  # Maximum time to wait (in seconds) 

    - name: Save grep output to a local log file
      become: false
      lineinfile:
        path: "/home/cisco/deploy.log"
        line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: sonic[inventory_hostname]['vm_name'] {{ grep_result.stdo
ut }}"
        create: yes
      delegate_to: localhost
