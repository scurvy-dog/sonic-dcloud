---

# ansible-playbook -i hosts lab_deploy-playbook.yml -e "ansible_user=cisco ansible_ssh_pass=cisco123 ansible_sudo_pass=cisco123" -vv

- name: Setup lab and deploy SONiC containerlab nodes
  hosts: sonic_host_vms
  become: true
  tasks:
    - name: git pull to update repo on each VM
      command: git pull
      args:
        chdir: /home/cisco/sonic-dcloud
      ignore_errors: yes
      
    - name: Copy motd file to remote vm
      copy:
        src: "motd"
        dest: "/etc/motd"
        mode: 0644 
       
    - name: Copy motd file to local host
      copy:
        src: "motd"
        dest: "/etc/motd"
        mode: 0644 
      delegate_to: localhost  
        
    - name: remove old deploy.log file
      command: rm deploy.log
      args:
        chdir: /home/cisco
      ignore_errors: yes
      delegate_to: localhost
      
    - name: run containerlab deploy to launch sonic vxr8000 nodes
      command: sudo containerlab deploy -t "{{ inventory_hostname }}/clab.yml"
      args:
        chdir: /home/cisco/sonic-dcloud/1-SONiC_101/ansible/files/
      ignore_errors: yes

    - name: run vxlan shell script to interconnect containerlab nodes across VMs
      command: "{{ inventory_hostname }}/vxlan.sh"
      args:
        chdir: /home/cisco/sonic-dcloud/1-SONiC_101/ansible/files/
      ignore_errors: yes

    - name: reset user/group permissions on repo folders 
      command: "chown -R cisco:cisco /home/cisco/sonic-dcloud"
      ignore_errors: yes

    - name: clear old ssh keys 
      command: "rm .ssh/known_hosts"
      args:
        chdir: /home/cisco/
      ignore_errors: yes

    - name: Pause for 10 minutes
      pause:
        minutes: 10

    - name: grep Router from docker logs
      shell: docker logs {{hostvars[inventory_hostname]['container'] }} | grep Router
      register: grep_result

    - name: debug grep result
      debug:
        var: grep_result.stdout

    - name: Save grep output to a local log file
      lineinfile:
        path: "/home/cisco/deploy.log"
        line: "{{inventory_hostname}} {{ grep_result.stdout }}"
        create: yes
      delegate_to: localhost
      
- name: Setup lab and deploy endpoint nodes
  hosts: endpoint_vms
  become: true
  tasks:
    - name: Copy motd file to remote vm
      copy:
        src: "motd"
        dest: "/etc/motd"
        mode: 0644 
