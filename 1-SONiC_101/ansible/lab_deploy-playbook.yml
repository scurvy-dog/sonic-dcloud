---

# ansible-playbook -i hosts lab_deploy-playbook.yml -e "ansible_user=cisco ansible_ssh_pass=cisco123 ansible_sudo_pass=cisco123" -vv
      
- name: Start logging to deploy.log file
  hosts: localhost
  become: false
  tasks:
    - name: delete old deploy log 
      command: rm /home/cisco/deploy.log
      ignore_errors: yes
      run_once: true
      become: false
      delegate_to: localhost
      
    - name: deploy.log start message
      become: false
      lineinfile:
        path: "/home/cisco/deploy.log"
        line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: Start Containerlab Deploy Script"
        create: yes
      delegate_to: localhost
      
    - name: deploy.log time to spin up
      become: false
      lineinfile:
        path: "/home/cisco/deploy.log"
        line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: Expect to wait 10+ minutes as VXR scripts build out SONiC routers"
        create: yes
      delegate_to: localhost
      
- name: Setup lab and deploy SONiC containerlab nodes
  hosts: localhost
  become: true
  tasks:
      
    - name: Copy motd file to remote vm
      copy:
        src: "motd"
        dest: "/etc/motd"
        mode: 0644 
      
    - name: run VXR start on linux-host-1 to launch sonic 8000 emulator nodes - this will take about 6 minutes
      command: "sudo vxr.py start 4-node-topo.yaml"
      args:
        chdir: /home/cisco/sonic-dcloud/1-SONiC_101/
      ignore_errors: yes

    - name: reset user/group permissions on repo folders 
      command: "chown -R cisco:cisco /home/cisco/sonic-dcloud"
      ignore_errors: yes

    - name: ping sonic management IPs
      command: "ping "
      ignore_errors: yes

    - name: Pause for 4 minutes then check sonic VMs interface status
      pause:
        minutes: 4
      become: false

    # - name: GREP - Wait for 'Router up' or 'Router failed' message to appear in logs
    #   shell: docker logs -t {{ hostvars[inventory_hostname]['container'] }} | grep Router || true
    #   register: grep_result
    #   until: grep_result.stdout_lines | length > 0
    #   retries: 18  # Number of times to retry
    #   delay: 30  # Delay between retries
    #   timeout: 540  # Maximum time to wait (in seconds) 
      
    # - name: Save grep output to a local log file
    #   become: false
    #   lineinfile:
    #     path: "/home/cisco/deploy.log"
    #     line: "{{ ansible_date_time.date }} {{ansible_date_time.time}} {{ansible_date_time.tz}}: SONiC Router {{ hostvars[inventory_hostname]['sonic_rtr'] }} {{ grep_result.stdout }}"
    #     create: yes
    #   delegate_to: localhost

# - name: run health check playbook
#   import_playbook: sonic_node_health_check.yml
#   ignore_errors: yes

- name: Setup lab and deploy endpoint nodes
  hosts: endpoint_vms
  become: true
  tasks:
    - name: Copy motd file to remote vm
      copy:
        src: "motd"
        dest: "/etc/motd"
        mode: 0644 
